{"version":3,"sources":["Component/NavBar/NavBar.js","Constants/Constants.js","Urls.js","axios.js","Component/Banner/Banner.js","Component/RowPost/RowPost.js","App.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","originals","action","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","Math","floor","random","length","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","urlid","setUrlid","url","map","obj","onClick","id","isSmall","opts","height","width","playerVars","autoplay","videoId","key","App","ReactDOM","render","document","getElementById"],"mappings":"uOAgBeA,MAZf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,oHAAoHC,IAAI,iBAClJ,qBAAKF,UAAU,UAAUC,IAAI,gFAAgFC,IAAI,gBCPhHC,EAAU,mCACVC,EAAW,sCCDXC,EAAS,8BAAyBF,EAAzB,sBACTG,EAAM,kCAA8BH,EAA9B,mB,uBCMFI,E,OALAC,EAAMC,OAAO,CAC1BC,QFJmB,iC,MGqCRC,MA9Bf,WACI,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OAVDC,qBAAU,WACLP,EAAMQ,IAAN,oCAAuCb,EAAvC,oBAAiEc,MAAK,SAACC,GAEvEC,QAAQC,IAAIF,EAASG,KAAKC,QAAQ,IAClCR,EAASI,EAASG,KAAKC,QAAQC,KAAKC,MAAMD,KAAKE,SAAWP,EAASG,KAAKC,QAAQI,OAAO,UAKzF,IAEE,sBACIC,MAAQ,CAACC,gBAAgB,OAAD,OAAUf,EAAST,EAAUS,EAAMgB,cAAgB,GAAnD,MAC3B7B,UAAU,SAFX,UAGI,sBAAKA,UAAU,UAAf,UACI,qBAAIA,UAAU,QAAd,cAAwBa,EAAQA,EAAMiB,MAAO,GAA7C,OACA,sBAAK9B,UAAU,iBAAf,UACI,wBAAQA,UAAU,SAAlB,kBACA,wBAAQA,UAAU,SAAlB,yBAEJ,qBAAIA,UAAU,cAAd,cAA8Ba,EAAQA,EAAMkB,SAAW,GAAvD,UAEJ,qBAAK/B,UAAU,oB,cCmCZgC,MA5Df,SAAiBC,GAEb,MAA4BrB,mBAAS,IAArC,mBAAOsB,EAAP,KAAeC,EAAf,KACA,EAAyBvB,mBAAS,IAAlC,mBAAOwB,EAAP,KAAaC,EAAb,KAqCA,OAnCAtB,qBAAU,WACNP,EAAMQ,IAAIiB,EAAMK,KAAKrB,MAAK,SAAAC,GAEtBC,QAAQC,IAAIF,EAASG,MACrBc,EAAUjB,EAASG,KAAKC,cAK7B,IA2BC,sBAAKtB,UAAU,MAAf,UACI,+BAAKiC,EAAMH,MAAX,OACA,qBAAK9B,UAAU,UAAf,SAEKkC,EAAOK,KAAI,SAACC,GAAD,OAER,qBAAKC,QAAS,kBAtBTC,EAsByBF,EAAIE,GApB9CvB,QAAQC,IAAIsB,QACZlC,EAAMQ,IAAN,iBAAqB0B,EAArB,2BAA0CvC,EAA1C,oBAAoEc,MAAK,SAAAC,GACrEC,QAAQC,IAAIF,EAASG,MACa,IAA/BH,EAASG,KAAKC,QAAQI,OACrBW,EAASnB,EAASG,KAAKC,QAAQ,IAE/BH,QAAQC,IAAI,4BARJ,IAACsB,GAsBkC1C,UAAWiC,EAAMU,QAAU,cAAe,SAAUzC,IAAI,SAASD,IAAG,WAAMG,EAAUoC,EAAIX,sBAOxIO,GAAS,cAAC,IAAD,CAASQ,KAtCZ,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,IAiCqBC,QAASb,EAAMc,UCjCzCC,MAjBf,WAEE,OAEE,sBAAKnD,UAAU,MAAf,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAASsC,IAAMjC,EAAWyB,MAAM,qBAChC,cAAC,EAAD,CAASQ,IAAKhC,EAAQwB,MAAM,eAAea,SAAO,QCZ1DS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.140c4931.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./NavBar.css\";\r\n\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png \" alt=\"Netflix Logo\" />\r\n            <img className=\"avathar\" src=\" https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avathar\" />\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const baseUrl = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = '5616a1d694f51fe02225acc865163d72';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';","import {API_KEY} from './Constants/Constants'\r\nexport const originals =`discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `/discover/movie?api_key=${API_KEY}&with_genres=28`","import axios from \"axios\"\r\nimport {baseUrl} from './Constants/Constants'\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n    \r\n  });\r\n\r\n  export default instance;","import React, { useEffect, useState } from 'react'\r\nimport {API_KEY} from '../../Constants/Constants'\r\nimport axios from '../../axios'\r\nimport {imageUrl} from '../../Constants/Constants'\r\nimport './Banner.css'\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n   useEffect(() => {\r\n        axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n\r\n        console.log(response.data.results[0])\r\n        setMovie(response.data.results[Math.floor(Math.random() * response.data.results.length-1)])\r\n        \r\n\r\n    })\r\n      \r\n   }, [])\r\n    return (\r\n        <div \r\n            style= {{backgroundImage:  `url(${movie ?  imageUrl +movie.backdrop_path : \"\"})`}}\r\n         className='banner'>\r\n            <div className='content'>\r\n                <h1 className='title'> {movie ? movie.title :\"\"} </h1>\r\n                <div className='banner-buttons' >\r\n                    <button className='button'>play</button>\r\n                    <button className='button'>playlist</button>\r\n                </div>\r\n                <h1 className='description'> {movie ? movie.overview : \"\"} </h1>\r\n            </div>\r\n            <div className=\"fade_bottom\"></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState,useEffect } from 'react'\r\nimport YouTube from 'react-youtube'\r\nimport './RowPost.css'\r\nimport axios from '../../axios'\r\nimport {imageUrl,API_KEY } from '../../Constants/Constants'\r\n\r\nfunction RowPost(props) {\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const [urlid,setUrlid] = useState('')\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url).then(response=>{\r\n\r\n            console.log(response.data)\r\n            setMovies(response.data.results)\r\n        })\r\n\r\n        \r\n       \r\n    }, [])\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n      const handleMovie=(id)=>{\r\n\r\n        console.log(id)\r\n        axios.get( `/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{ \r\n            console.log(response.data)\r\n            if(response.data.results.length!==0){\r\n                setUrlid(response.data.results[0])\r\n            }else{\r\n                console.log(\"Trailer not available\")\r\n            }\r\n        })\r\n\r\n\r\n      }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{props.title} </h2>\r\n            <div className='posters'>\r\n            \r\n                {movies.map((obj)=>\r\n\r\n                    <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' :'poster'} alt='poster' src={` ${imageUrl+ obj.backdrop_path}`}/>\r\n\r\n\r\n                )}\r\n            \r\n               \r\n            </div>\r\n        {  urlid && <YouTube opts={opts} videoId={urlid.key}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n","\nimport React from 'react';\nimport NavBar from './Component/NavBar/NavBar';\nimport {action,originals} from './Urls'\nimport \"./App.css\";\nimport Banner from './Component/Banner/Banner';\nimport RowPost from './Component/RowPost/RowPost';\n\n\n\nfunction App() {\n\n  return (\n\n    <div className=\"App\">  \n      \n        <NavBar/>\n        <Banner/>\n        <RowPost url= {originals} title='Netflix Original'  />\n        <RowPost url={action} title='Action Movie' isSmall />\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}